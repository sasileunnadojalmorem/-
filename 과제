let cols, rows;
let scl = 20;
let w = 1400;
let h = 1000;

let flying = 0;

let terrain = [];

function setup() {
  createCanvas(600, 600, WEBGL);
  cols = w / scl;
  rows = h / scl;

  for (let x = 0; x < cols; x++) {
    terrain[x] = [];
    for (let y = 0; y < rows; y++) {
      terrain[x][y] = 0; // specify a default value for now
    }
  }
  
  // 조명 설정
  

  noStroke();
}

function duckdraw(offX, offY) {
  orbitControl();
  
  // X 및 Y 축의 이동량에 따라 오리의 위치를 조정
  translate(offX + 10, offY + terrain[floor(offX / scl)][floor(offY / scl)] - 15);
  rotateX(200);
  push();
  
  // 머리
  push();
  fill(255, 204, 0); // 노란색
  translate(0, -50, 0);
  sphere(50);
  
  // 눈
  fill(0); // 검은색
  translate(-15, -15, 35); // 눈 위치 조정
  sphere(13); // 눈의 크기와 모양을 결정
  translate(30, 0, 0); // 다른 눈의 위치
  sphere(13);
  pop();
  
  // 몸체
  
  fill(255, 204, 0); // 흰색
  sphere(60);
  
  // 부리
  fill(255, 220, 0); // 주황색
  translate(0, -40, 45);
  cylinder(15, 15, 5);
  
  // 다리
  translate(0, 0, 10);
  pop();
  
  // 스트로크 제거
  noStroke();
}

function draw() {

  flying -= 0.1;
  let yoff = flying;
  for (let y = 0; y < rows; y++) {
    let xoff = 0;
    for (let x = 0; x < cols; x++) {
      terrain[x][y] = map(noise(xoff, yoff), 0, 1, -100, 100);
      xoff += 0.2;
    }
    yoff += 0.2;
  }
  
  background(0, 0, 200); // 파란색 배경
  rotateX(PI / 3);
  fill(33, 135, 255, 300); // 수정된 파란색으로 설정
  translate(-w / 2, -h / 2);
  for (let y = 0; y < rows - 1; y++) {
    beginShape(TRIANGLE_STRIP);
    for (let x = 0; x < cols; x++) {
      let v = terrain[x][y];
      fill(33, 135, 255, 100 + v); // 수정된 파란색으로 설정
      vertex(x * scl, y * scl, terrain[x][y]);
      vertex(x * scl, (y + 1) * scl, terrain[x][y + 1]);
    }
    specularMaterial(250);
    endShape();
  }

  // 오리 그리기
  ambientLight(100);
  pointLight(255, 255, 255, w / 2, h / 2, 100);
  duckdraw(w / 2, h / 2);
}
